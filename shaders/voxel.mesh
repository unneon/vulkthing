#version 460

#extension GL_EXT_mesh_shader : require
#extension GL_EXT_shader_8bit_storage : require
#extension GL_EXT_shader_16bit_storage : require
#extension GL_EXT_shader_explicit_arithmetic_types_int8 : require
#extension GL_EXT_shader_explicit_arithmetic_types_int16 : require

#include "types/uniform.glsl"
#include "types/voxel.glsl"

layout(binding = 0) uniform GLOBAL_UNIFORM_TYPE global;
layout(binding = 2) readonly buffer Vertices {
    VoxelVertex vertices[];
};
layout(binding = 3) readonly buffer Triangles {
    VoxelTriangle triangles[];
};
layout(binding = 4) readonly buffer Meshlets {
    VoxelMeshlet meshlets[];
};

// TODO: Mesa advertises 128 maxPreferredMeshWorkGroupInvocations contradicting their presentation and official drivers.
layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;
layout(triangles, max_vertices = 128, max_primitives = 256) out;

layout(location = 0) out float ambient_occlusion[];
layout(location = 1) perprimitiveEXT out uint triangle_data[];

taskPayloadSharedEXT VoxelPayload payload;

void main() {
    VoxelMeshlet meshlet = meshlets[payload.meshlet_ids[gl_WorkGroupID.x]];
    SetMeshOutputsEXT(meshlet.vertex_count, meshlet.triangle_count);

    if (gl_LocalInvocationID.x < meshlet.triangle_count) {
        VoxelTriangle triangle = triangles[meshlet.triangle_offset + gl_LocalInvocationID.x];
        gl_PrimitiveTriangleIndicesEXT[gl_LocalInvocationID.x] = triangle.indices;
        triangle_data[gl_LocalInvocationID.x] = triangle.data;
    }

    if (gl_LocalInvocationID.x < meshlet.vertex_count) {
        VoxelVertex vertex = vertices[meshlet.vertex_offset + gl_LocalInvocationID.x];
        vec3 world_space = vertex.position + global.voxels.chunk_size * vec3(meshlet.chunk);
        vec4 clip_space = global.camera.projection_matrix * global.camera.view_matrix * vec4(world_space, 1);
        gl_MeshVerticesEXT[gl_LocalInvocationID.x].gl_Position = clip_space;
        ambient_occlusion[gl_LocalInvocationID.x] = 0.75 * float(vertex.data & 3) / 3;
    }
}
